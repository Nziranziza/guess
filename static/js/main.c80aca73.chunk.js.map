{"version":3,"sources":["components/PrivateRoute/index.jsx","components/LoginRoute/index.jsx","pages/login/index.jsx","services/index.js","components/Toast/index.jsx","pages/apply/index.jsx","pages/PlayGround/index.jsx","pages/Submit/index.jsx","routes/index.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["PrivateRoute","Component","component","rest","isLoggedIn","localStorage","getItem","render","to","LoginRoute","Login","useState","username","password","credentials","setCredentials","history","useHistory","onInputChange","key","value","className","type","placeholder","onChange","e","target","disabled","onClick","preventDefault","setItem","JSON","stringify","push","fetchAPI","endpoint","options","Promise","resolve","reject","parse","defaultOptions","method","headers","Accept","Authorization","base64","encode","combinedOptions","body","fetch","then","res","status","json","message","catch","err","logout","removeItem","Toast","show","onClose","isOpen","setIsOpen","useEffect","setTimeout","Apply","preferredName","emailAddress","details","setDetails","step","setStep","instructions","setInstructions","isSending","setSending","showToast","setShowToast","error","setError","applicantId","gameId","finally","replaceAll","PlayGround","guess","setGuess","previousGuess","setPreviousGuess","result","setResult","sending","Number","Submit","setGameId","setApplicantId","packUrl","setPackUrl","packInstructions","setPackInstructions","submitting","setSubmitting","finalMessage","setFinalMessage","logoutHandler","Routes","exact","path","App","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c80aca73.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Redirect, \n  Route\n} from 'react-router-dom';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const isLoggedIn = localStorage.getItem('credentials');\n  return <Route \n  render={() => (\n    isLoggedIn ? <Component { ...rest }/> : <Redirect to=\"/login\" />\n  )}\n  />\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport {\n  Redirect, \n  Route\n} from 'react-router-dom';\n\nconst LoginRoute = ({ component: Component, ...rest }) => {\n  const isLoggedIn = localStorage.getItem(\"credentials\");\n  const applicantId = localStorage.getItem(\"applicantId\");\n\n  if (applicantId && isLoggedIn) {\n    return <Route render={() => <Redirect to=\"/play\" />} />;\n  }\n\n  if (isLoggedIn) {\n    return <Route render={() => <Redirect to=\"/apply\" />} />;\n  }\n\n  return <Route render={() => <Component {...rest} />} />;;\n};\n\nexport default LoginRoute;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./index.scss\";\n\nconst Login = () => {\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const history = useHistory();\n\n  const onInputChange = (key, value) => {\n    setCredentials({\n      ...credentials,\n      [key]: value,\n    });\n  };\n\n  const isDisabled = () => {\n    return !credentials.password || !credentials.username;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    localStorage.setItem(\"credentials\", JSON.stringify(credentials));\n    history.push(\"apply\");\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h1>Login to Guess Game</h1>\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={credentials.username}\n          onChange={(e) => onInputChange(\"username\", e.target.value)}\n          className=\"input\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={credentials.password}\n          onChange={(e) => onInputChange(\"password\", e.target.value)}\n          className=\"input\"\n        />\n        <button disabled={isDisabled()} onClick={onSubmit} className=\"button\">\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import base64 from 'base-64';\n\nconst API_URL = 'https://game.flowautobody.com.au';\n\nexport const fetchAPI = (endpoint, options) =>\n  new Promise((resolve, reject) => {\n    const credentials = JSON.parse(localStorage.getItem(\"credentials\"));\n\n    const defaultOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        Accept: \"application/json\",\n        Authorization: `Basic ${base64.encode(`${credentials?.username}:${credentials?.password}`)}`,\n      },\n    };\n\n    const combinedOptions = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    if (combinedOptions.body) {\n      combinedOptions.body = JSON.stringify(combinedOptions.body);\n    }\n\n    fetch(`${API_URL}${endpoint}`, combinedOptions)\n    .then((res) => {\n      if (res.status === 200 || res.status === 201 || res.status === 304) {\n        return resolve(res.json() || {});\n      }\n      switch(res.status) {\n        case 401:\n          return reject({\n            ...res,\n            message: 'Incorrect username and password combination'\n          });\n        case 400:\n          return reject({\n            ...res,\n            message: 'Wrong input format'\n          })\n        default:\n          return reject({\n            ...res,\n            message: 'Something went wrong!'\n          })\n      }\n    })\n    .catch(err => reject(err));\n    \n  });\n\nexport const logout = () => {\n  localStorage.removeItem('credentials');\n  localStorage.removeItem('applicantId');\n  localStorage.removeItem('gameId');\n}\n","import React, { useState, useEffect } from 'react';\n\nimport './index.scss';\n\nconst Toast = ({\n  show,\n  message,\n  type,\n  onClose\n}) => {\n  const [isOpen, setIsOpen] = useState(show);\n  useEffect(() => {\n    setIsOpen(show);\n  }, [show]);\n\n  useEffect(() => {\n    if(isOpen) {\n      setTimeout(() => {\n        onClose()\n      }, 1500);\n    }\n  }, [isOpen]);\n\n  return <div className={`toast-container ${isOpen ? 'show' : ''}`}>\n    <div className={type}>\n      <span>{message}</span>\n    </div>\n  </div>\n};\n\nexport default Toast;\n","import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport parse from 'html-react-parser';\n\nimport \"./index.scss\";\nimport { fetchAPI, logout } from '../../services';\nimport Toast from '../../components/Toast';\n\nconst Apply = () => {\n  const [details, setDetails] = useState({\n    preferredName: \"\",\n    emailAddress: \"\",\n  });\n  const [step, setStep] = useState(1);\n  const [instructions, setInstructions] = useState('');\n  const history = useHistory();\n  const [isSending, setSending] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [error, setError] = useState('Something went wrong!')\n\n  const onInputChange = (key, value) => {\n    setDetails({\n      ...details,\n      [key]: value,\n    });\n  };\n\n  const onApply = (e) => {\n    e.preventDefault();\n    setSending(true);\n    fetchAPI('/apply', {\n      body: details,\n      method: 'POST'\n    }).then((res) => {\n      localStorage.setItem('applicantId', res.applicantId);\n      setStep(step + 1);\n      setInstructions(res.instructions);\n      fetchAPI('/game', {\n        method: 'POST',\n        body: {\n          applicantId: res.applicantId\n        }\n      }).then((res) => {\n        localStorage.setItem('gameId', res.gameId)\n      })\n    }).catch((error) => {\n      setShowToast(true);\n      setError(error.message);\n    }).finally(() => {\n      setSending(false)\n    })\n  };\n\n  const onPlay = () => {\n    history.push('/play')\n  };\n\n  const isDisabled = () => {\n    return !details.emailAddress \n    || !details.preferredName \n    || isSending\n  }\n\n  const logoutHandler = () => {\n    logout();\n    history.push('/login');\n  }\n\n  return (\n    <>\n    <div className=\"form-container\">\n      <h1>{`${step === 1 ? \"Apply to play\" : \"Instructions\"}`}</h1>\n      {step === 1 ? (\n        <form>\n          <input\n            placeholder=\"Preferred Name\"\n            value={details.preferredName}\n            onChange={(e) => onInputChange(\"preferredName\", e.target.value)}\n            type=\"text\"\n            className=\"input\"\n          />\n          <input\n            placeholder=\"Email address\"\n            value={details.emailAddress}\n            onChange={(e) => onInputChange(\"emailAddress\", e.target.value)}\n            type=\"email\"\n            className=\"input\"\n          />\n          <button \n          onClick={onApply}\n          className=\"button\"\n          disabled={isDisabled()}\n          >\n            {isSending ? 'Applying...' : 'Apply'}\n          </button>\n        </form>\n      ) : (\n        <div className=\"form-container\">\n          <p>{parse(instructions.replaceAll('\\n', '<br />'))}</p>\n          <button\n           onClick={onPlay}\n           className=\"button\"\n          >\n            Play\n          </button>\n        </div>\n      )}\n    </div>\n    <button \n      className=\"logout-btn button\"\n      onClick={logoutHandler}\n      >\n        Logout\n      </button>\n      <Toast\n       type=\"error\"\n       message={error}\n       show={showToast}\n       onClose={() => setShowToast(false)}\n      />\n    </>\n  );\n};\n\nexport default Apply;\n","import React, { useState, useEffect } from \"react\";\nimport parse from 'html-react-parser';\nimport { useHistory } from 'react-router-dom';\n\nimport './index.scss';\nimport { fetchAPI, logout } from '../../services';\nimport Toast from '../../components/Toast';\n\nconst PlayGround = () => {\n  const [guess, setGuess] = useState(\"\");\n  const [previousGuess, setPreviousGuess] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [sending, setSending] = useState(false);\n  const [instructions, setInstructions] = useState('');\n  const history = useHistory();\n  const [error, setError] = useState('');\n  const [showToast, setShowToast] = useState(false);\n  \n  useEffect(() => {\n    const gameId = localStorage.getItem(\"gameId\");\n    const applicantId = localStorage.getItem(\"applicantId\");\n    if(!gameId) {\n      fetchAPI('/game', {\n        method: 'POST',\n        body: {\n          applicantId: applicantId\n        }\n      }).then((res) => {\n        localStorage.setItem('gameId', res.gameId)\n      })\n    }\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const applicantId = localStorage.getItem(\"applicantId\");\n    const gameId = localStorage.getItem(\"gameId\");\n    setSending(true);\n    fetchAPI(\"/game\", {\n      method: \"PUT\",\n      body: {\n        applicantId,\n        gameId,\n        guess: Number(guess),\n      },\n    })\n      .then(({ result, instructions }) => {\n        setResult(result);\n        setPreviousGuess(guess);\n        setGuess(\"\");\n        if(result === 'correct') {\n          setInstructions(instructions)\n        }\n      })\n      .catch((error) => {\n        setError(error.message);\n        setShowToast(true);\n      })\n      .finally(() => {\n        setSending(false);\n      });\n  };\n\n  const logoutHandler = () => {\n    logout();\n    history.push('/login');\n  }\n\n  const redirectSubmit = () => {\n    history.push('/submit')\n  }\n  return (\n    <>\n    <div className=\"form-container\">\n      {result !== \"correct\" && (\n        <>\n          <h1>Enter your guess</h1>\n          <form>\n            <input\n              placeholder=\"Guess\"\n              onChange={(e) => setGuess(e.target.value)}\n              value={guess}\n              className=\"input\"\n            />\n            <button className=\"button\" onClick={onSubmit} disabled={!guess || sending}>\n              {sending ? \"Processing...\" : \"Send\"}\n            </button>\n          </form>\n        </>\n      )}\n      {previousGuess && result !== \"correct\" && (\n        <div className=\"error\">\n          <span>Your guess: {previousGuess}</span>\n          <span>Go {result}</span>\n        </div>\n      )}\n      {result === \"correct\" && (\n        <>\n        <div className=\"success\">\n          <span>Your guess: {previousGuess}</span>\n          <span>That is correct!!!</span>\n          <p>{parse(instructions.replaceAll(\"\\n\", \"<br />\"))}</p>\n        </div>\n        <button className=\"button submit-btn\" onClick={redirectSubmit}>\n          Submit\n          </button>\n        </>\n      )}\n    </div>\n    <button \n      className=\"logout-btn button\"\n      onClick={logoutHandler}\n      >\n        Logout\n      </button>\n      <Toast\n       type=\"error\"\n       message={error}\n       show={showToast}\n       onClose={() => setShowToast(false)}\n      />\n    </>\n  );\n};\n\nexport default PlayGround;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport parse from 'html-react-parser';\n\nimport { fetchAPI, logout } from \"../../services\";\nimport Toast from \"../../components/Toast\";\n\nconst Submit = () => {\n  const [gameId, setGameId] = useState(localStorage.getItem(\"gameId\"));\n  const [applicantId, setApplicantId] = useState(\n    localStorage.getItem(\"applicantId\")\n  );\n  const [packUrl, setPackUrl] = useState(\"\");\n  const [packInstructions, setPackInstructions] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showToast, setShowToast] = useState(false);\n  const [finalMessage, setFinalMessage] = useState(\"\");\n  const history = useHistory();\n\n  const isDisabled = () => {\n    return (\n      !gameId || !applicantId || !packUrl || !packInstructions || submitting\n    );\n  };\n\n  const onSubmit = () => {\n    setSubmitting(true);\n    fetchAPI(\"/submit-application\", {\n      method: \"POST\",\n      body: {\n        applicantId,\n        gameId,\n        packUrl,\n        packInstructions,\n      },\n    })\n      .then((res) => {\n        setFinalMessage(res.instructions);\n      })\n      .catch((error) => {\n        setError(error.message);\n        setShowToast(true);\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  const logoutHandler = () => {\n    logout();\n    history.push(\"/login\");\n  };\n\n  return (\n    <>\n      <div className=\"form-container\">\n        {!finalMessage && (\n          <>\n            <h1>Submit your pack</h1>\n            <form>\n              <input\n                className=\"input\"\n                placeholder=\"Applicant Id\"\n                value={applicantId}\n                onChange={(e) => setApplicantId(e.target.value)}\n              />\n              <input\n                className=\"input\"\n                placeholder=\"Game Id\"\n                value={gameId}\n                onChange={(e) => setGameId(e.target.value)}\n              />\n              <input\n                className=\"input\"\n                placeholder=\"Pack url\"\n                value={packUrl}\n                onChange={(e) => setPackUrl(e.target.value)}\n              />\n              <textarea\n                className=\"input\"\n                placeholder=\"Pack Instructions\"\n                value={packInstructions}\n                onChange={(e) => setPackInstructions(e.target.value)}\n              />\n              <button\n                className=\"button\"\n                disabled={isDisabled()}\n                onClick={onSubmit}\n                type=\"submit\"\n              >\n                {submitting ? \"Submitting...\" : \"Submit\"}\n              </button>\n            </form>\n          </>\n        )}\n        {finalMessage && (\n          <>\n            <div className=\"success\">\n              <p>{parse(finalMessage.replaceAll('\\n', '<br />'))}</p>\n            </div>\n            <button onClick={logoutHandler} className=\"button submit-btn\">\n              Exit\n          </button>\n          </>\n        )}\n        <Toast\n          type=\"error\"\n          message={error}\n          show={showToast}\n          onClose={() => setShowToast(false)}\n        />\n      </div>\n      <button\n        className=\"logout-btn button\"\n        onClick={logoutHandler}\n      >\n        Logout\n      </button>\n    </>\n  );\n};\n\nexport default Submit;\n","import { Switch, Redirect, Route } from 'react-router-dom';\n\nimport PrivateRoute from '../components/PrivateRoute';\nimport LoginRoute from '../components/LoginRoute';\nimport Login from '../pages/login';\nimport Apply from '../pages/apply';\nimport PlayGround from '../pages/PlayGround';\nimport Submit from '../pages/Submit'\n\nconst Routes = () => (\n  <Switch>\n    <Route  exact path=\"/\">\n      <Redirect to=\"/login\" />\n    </Route>\n    <LoginRoute path=\"/login\" exact component={Login} />\n    <PrivateRoute path=\"/apply\" exact component={Apply} />\n    <PrivateRoute path=\"/play\" exact component={PlayGround} />\n    <PrivateRoute path=\"/submit\" exact component={Submit} />\n  </Switch>\n);\n\nexport default Routes;\n","import { HashRouter as Router } from 'react-router-dom';\n\nimport './App.scss';\nimport Routes from './routes/index';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Routes />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}